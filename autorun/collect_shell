if [[ "$1" == "" || "$1" == "-h" || "$2" == "" ]]; then
	echo Usage $0 input_dir out_file
	exit 1
fi

in_dir=`realpath "$1"`
of=`pwd`/"$2"
ls "$1/shell.asm" &> /dev/null
if [[ $? != 0 ]]; then
	echo no shell.asm in $1
	exit 1
fi

declare -A pointers
total=`ls "$in_dir" | wc -l`

python3 mcasm/mcasm.py "$in_dir/shell.asm" "$of"
pointers[shell.asm]=0
cp "$of" /tmp/tmp.mcasm
dd bs=$(($total*18+4)) count=1 if=/dev/zero of=out.bin 2> /dev/null
cat /tmp/tmp.mcasm out.bin > "$of"

for f in `ls "$in_dir" | sort`; do
	if [[ $f == "$in_dir/shell.asm" ]]; then exit 1; fi
	len=`stat "$of" -c %s`
	python3 mcasm/mcasm.py "$in_dir/$f" out.bin $len
	if [[ $? != 0 ]]; then exit 1; fi
	cp "$of" /tmp/tmp.mcasm
	pointers[$f]=$len
	cat /tmp/tmp.mcasm out.bin > "$of"
done
rm out.bin

for f in `ls "$in_dir" | sort`; do
n=0
echo "
def nb(n):
	res = []
	for x in range(4):
		res.append(n % 256)
		n //= 256
	return bytes(res)

with open('"$of"', 'rb+') as f:
	if not $n:
		f.write(nb($total))
		f.seek(${pointers[$f]}-$total*18+4)
	if '$f' != 'shell.asm':
		f.seek($n*18, 1)
		f.write(('$f'[:-4]+' '*14)[:14].encode())
		f.write(nb(${pointers[$f]}))
" | python3
echo ${pointers[$f]}
n=$(($n+1))
done
